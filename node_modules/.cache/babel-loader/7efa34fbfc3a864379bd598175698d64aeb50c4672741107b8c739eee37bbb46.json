{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"consec\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"strong\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, \"Consecutive: \" + _toDisplayString($options.isConsecutive ? 'true' : 'false'), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$options","isConsecutive"],"sources":["D:\\Work\\www\\alsodev-test\\src\\components\\ConsecutiveCheck.vue"],"sourcesContent":["<template>\r\n  <div class=\"consec\">\r\n    <p><strong></strong></p>\r\n    <p>Consecutive: {{ isConsecutive ? 'true' : 'false' }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    array: {\r\n      type: Array,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    isConsecutive() {\r\n      const sortedArray = [...this.array].sort((a, b) => a - b);\r\n      for (let i = 1; i < sortedArray.length; i++) {\r\n        if (sortedArray[i] - sortedArray[i - 1] !== 1) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAQ;gCACjBC,mBAAA,CAAwB,Y,aAArBA,mBAAA,CAAiB,U;;;uBADtBC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,UAAwB,EACxBH,mBAAA,CAA0D,WAAvD,eAAa,GAAAI,gBAAA,CAAGC,QAAA,CAAAC,aAAa,oC"},"metadata":{},"sourceType":"module","externalDependencies":[]}